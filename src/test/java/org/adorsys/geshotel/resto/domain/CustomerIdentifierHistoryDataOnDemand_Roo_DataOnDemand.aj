// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.resto.domain;

import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.adorsys.geshotel.domain.Customer;
import org.adorsys.geshotel.domain.CustomerDataOnDemand;
import org.adorsys.geshotel.resto.domain.CustomerIdentifierHistory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect CustomerIdentifierHistoryDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CustomerIdentifierHistoryDataOnDemand: @Component;
    
    private Random CustomerIdentifierHistoryDataOnDemand.rnd = new SecureRandom();
    
    private List<CustomerIdentifierHistory> CustomerIdentifierHistoryDataOnDemand.data;
    
    @Autowired
    private CustomerDataOnDemand CustomerIdentifierHistoryDataOnDemand.customerDataOnDemand;
    
    public CustomerIdentifierHistory CustomerIdentifierHistoryDataOnDemand.getNewTransientCustomerIdentifierHistory(int index) {
        CustomerIdentifierHistory obj = new CustomerIdentifierHistory();
        setCustomer(obj, index);
        setHistoryKey(obj, index);
        setIdentifierValue(obj, index);
        setStoringDate(obj, index);
        return obj;
    }
    
    public void CustomerIdentifierHistoryDataOnDemand.setCustomer(CustomerIdentifierHistory obj, int index) {
        Customer customer = customerDataOnDemand.getRandomCustomer();
        obj.setCustomer(customer);
    }
    
    public void CustomerIdentifierHistoryDataOnDemand.setHistoryKey(CustomerIdentifierHistory obj, int index) {
        String historyKey = "historyKey_" + index;
        obj.setHistoryKey(historyKey);
    }
    
    public void CustomerIdentifierHistoryDataOnDemand.setIdentifierValue(CustomerIdentifierHistory obj, int index) {
        String identifierValue = "identifierValue_" + index;
        obj.setIdentifierValue(identifierValue);
    }
    
    public void CustomerIdentifierHistoryDataOnDemand.setStoringDate(CustomerIdentifierHistory obj, int index) {
        Date storingDate = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setStoringDate(storingDate);
    }
    
    public CustomerIdentifierHistory CustomerIdentifierHistoryDataOnDemand.getSpecificCustomerIdentifierHistory(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        CustomerIdentifierHistory obj = data.get(index);
        return CustomerIdentifierHistory.findCustomerIdentifierHistory(obj.getId());
    }
    
    public CustomerIdentifierHistory CustomerIdentifierHistoryDataOnDemand.getRandomCustomerIdentifierHistory() {
        init();
        CustomerIdentifierHistory obj = data.get(rnd.nextInt(data.size()));
        return CustomerIdentifierHistory.findCustomerIdentifierHistory(obj.getId());
    }
    
    public boolean CustomerIdentifierHistoryDataOnDemand.modifyCustomerIdentifierHistory(CustomerIdentifierHistory obj) {
        return false;
    }
    
    public void CustomerIdentifierHistoryDataOnDemand.init() {
        data = CustomerIdentifierHistory.findCustomerIdentifierHistoryEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'CustomerIdentifierHistory' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<org.adorsys.geshotel.resto.domain.CustomerIdentifierHistory>();
        for (int i = 0; i < 10; i++) {
            CustomerIdentifierHistory obj = getNewTransientCustomerIdentifierHistory(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
