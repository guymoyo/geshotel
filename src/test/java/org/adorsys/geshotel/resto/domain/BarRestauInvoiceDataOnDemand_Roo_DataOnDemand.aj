// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.resto.domain;

import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.adorsys.geshotel.booking.domain.InvoiceState;
import org.adorsys.geshotel.resto.domain.BarRestauInvoice;
import org.adorsys.geshotel.resto.domain.CustomerType;
import org.adorsys.geshotel.resto.domain.Sale;
import org.adorsys.geshotel.resto.domain.SaleDataOnDemand;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect BarRestauInvoiceDataOnDemand_Roo_DataOnDemand {
    
    declare @type: BarRestauInvoiceDataOnDemand: @Component;
    
    private Random BarRestauInvoiceDataOnDemand.rnd = new SecureRandom();
    
    private List<BarRestauInvoice> BarRestauInvoiceDataOnDemand.data;
    
    @Autowired
    private SaleDataOnDemand BarRestauInvoiceDataOnDemand.saleDataOnDemand;
    
    public BarRestauInvoice BarRestauInvoiceDataOnDemand.getNewTransientBarRestauInvoice(int index) {
        BarRestauInvoice obj = new BarRestauInvoice();
        setBarRestauInvoiceKey(obj, index);
        setCreationDate(obj, index);
        setCustomerType(obj, index);
        setInvoiceNumber(obj, index);
        setInvoicePath(obj, index);
        setInvoiceState(obj, index);
        setNote(obj, index);
        setSale(obj, index);
        return obj;
    }
    
    public void BarRestauInvoiceDataOnDemand.setBarRestauInvoiceKey(BarRestauInvoice obj, int index) {
        String barRestauInvoiceKey = "barRestauInvoiceKey_" + index;
        obj.setBarRestauInvoiceKey(barRestauInvoiceKey);
    }
    
    public void BarRestauInvoiceDataOnDemand.setCreationDate(BarRestauInvoice obj, int index) {
        Date creationDate = new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR), Calendar.getInstance().get(Calendar.MONTH), Calendar.getInstance().get(Calendar.DAY_OF_MONTH), Calendar.getInstance().get(Calendar.HOUR_OF_DAY), Calendar.getInstance().get(Calendar.MINUTE), Calendar.getInstance().get(Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setCreationDate(creationDate);
    }
    
    public void BarRestauInvoiceDataOnDemand.setCustomerType(BarRestauInvoice obj, int index) {
        CustomerType customerType = CustomerType.class.getEnumConstants()[0];
        obj.setCustomerType(customerType);
    }
    
    public void BarRestauInvoiceDataOnDemand.setInvoiceNumber(BarRestauInvoice obj, int index) {
        String invoiceNumber = "invoiceNumber_" + index;
        obj.setInvoiceNumber(invoiceNumber);
    }
    
    public void BarRestauInvoiceDataOnDemand.setInvoicePath(BarRestauInvoice obj, int index) {
        String invoicePath = "invoicePath_" + index;
        obj.setInvoicePath(invoicePath);
    }
    
    public void BarRestauInvoiceDataOnDemand.setInvoiceState(BarRestauInvoice obj, int index) {
        InvoiceState invoiceState = InvoiceState.class.getEnumConstants()[0];
        obj.setInvoiceState(invoiceState);
    }
    
    public void BarRestauInvoiceDataOnDemand.setNote(BarRestauInvoice obj, int index) {
        String note = "note_" + index;
        obj.setNote(note);
    }
    
    public void BarRestauInvoiceDataOnDemand.setSale(BarRestauInvoice obj, int index) {
        Sale sale = saleDataOnDemand.getRandomSale();
        obj.setSale(sale);
    }
    
    public BarRestauInvoice BarRestauInvoiceDataOnDemand.getSpecificBarRestauInvoice(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        BarRestauInvoice obj = data.get(index);
        return BarRestauInvoice.findBarRestauInvoice(obj.getId());
    }
    
    public BarRestauInvoice BarRestauInvoiceDataOnDemand.getRandomBarRestauInvoice() {
        init();
        BarRestauInvoice obj = data.get(rnd.nextInt(data.size()));
        return BarRestauInvoice.findBarRestauInvoice(obj.getId());
    }
    
    public boolean BarRestauInvoiceDataOnDemand.modifyBarRestauInvoice(BarRestauInvoice obj) {
        return false;
    }
    
    public void BarRestauInvoiceDataOnDemand.init() {
        data = BarRestauInvoice.findBarRestauInvoiceEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'BarRestauInvoice' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<org.adorsys.geshotel.resto.domain.BarRestauInvoice>();
        for (int i = 0; i < 10; i++) {
            BarRestauInvoice obj = getNewTransientBarRestauInvoice(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
