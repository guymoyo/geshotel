// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.resto.domain;

import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.adorsys.geshotel.resto.domain.ProductGroup;

privileged aspect ProductGroup_Roo_Finder {
    
    public static TypedQuery<ProductGroup> ProductGroup.findProductGroupsByProductGroupKeyEquals(String productGroupKey) {
        if (productGroupKey == null || productGroupKey.length() == 0) throw new IllegalArgumentException("The productGroupKey argument is required");
        EntityManager em = ProductGroup.entityManager();
        TypedQuery<ProductGroup> q = em.createQuery("SELECT o FROM ProductGroup AS o WHERE o.productGroupKey = :productGroupKey", ProductGroup.class);
        q.setParameter("productGroupKey", productGroupKey);
        return q;
    }
    
    public static TypedQuery<ProductGroup> ProductGroup.findProductGroupsByTitleEquals(String title) {
        if (title == null || title.length() == 0) throw new IllegalArgumentException("The title argument is required");
        EntityManager em = ProductGroup.entityManager();
        TypedQuery<ProductGroup> q = em.createQuery("SELECT o FROM ProductGroup AS o WHERE o.title = :title", ProductGroup.class);
        q.setParameter("title", title);
        return q;
    }
    
    public static TypedQuery<ProductGroup> ProductGroup.findProductGroupsByTitleLike(String title) {
        if (title == null || title.length() == 0) throw new IllegalArgumentException("The title argument is required");
        title = title.replace('*', '%');
        if (title.charAt(0) != '%') {
            title = "%" + title;
        }
        if (title.charAt(title.length() - 1) != '%') {
            title = title + "%";
        }
        EntityManager em = ProductGroup.entityManager();
        TypedQuery<ProductGroup> q = em.createQuery("SELECT o FROM ProductGroup AS o WHERE LOWER(o.title) LIKE LOWER(:title)", ProductGroup.class);
        q.setParameter("title", title);
        return q;
    }
    
}
