// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.resto.domain;

import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.adorsys.geshotel.domain.UserAccount;
import org.adorsys.geshotel.resto.domain.BarRestauState;
import org.adorsys.geshotel.resto.domain.Procurement;

privileged aspect Procurement_Roo_Finder {
    
    public static TypedQuery<Procurement> Procurement.findProcurementsByProcurementKeyEquals(String procurementKey) {
        if (procurementKey == null || procurementKey.length() == 0) throw new IllegalArgumentException("The procurementKey argument is required");
        EntityManager em = Procurement.entityManager();
        TypedQuery<Procurement> q = em.createQuery("SELECT o FROM Procurement AS o WHERE o.procurementKey = :procurementKey", Procurement.class);
        q.setParameter("procurementKey", procurementKey);
        return q;
    }
    
    public static TypedQuery<Procurement> Procurement.findProcurementsByProcurementState(BarRestauState procurementState) {
        if (procurementState == null) throw new IllegalArgumentException("The procurementState argument is required");
        EntityManager em = Procurement.entityManager();
        TypedQuery<Procurement> q = em.createQuery("SELECT o FROM Procurement AS o WHERE o.procurementState = :procurementState", Procurement.class);
        q.setParameter("procurementState", procurementState);
        return q;
    }
    
    public static TypedQuery<Procurement> Procurement.findProcurementsByUserAccountAndProcurementState(UserAccount userAccount, BarRestauState procurementState) {
        if (userAccount == null) throw new IllegalArgumentException("The userAccount argument is required");
        if (procurementState == null) throw new IllegalArgumentException("The procurementState argument is required");
        EntityManager em = Procurement.entityManager();
        TypedQuery<Procurement> q = em.createQuery("SELECT o FROM Procurement AS o WHERE o.userAccount = :userAccount AND o.procurementState = :procurementState", Procurement.class);
        q.setParameter("userAccount", userAccount);
        q.setParameter("procurementState", procurementState);
        return q;
    }
    
}
