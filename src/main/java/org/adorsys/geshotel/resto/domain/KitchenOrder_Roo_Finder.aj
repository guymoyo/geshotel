// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.resto.domain;

import java.lang.String;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.adorsys.geshotel.resto.domain.BarRestauState;
import org.adorsys.geshotel.resto.domain.KitchenOrder;
import org.adorsys.geshotel.resto.domain.Sale;

privileged aspect KitchenOrder_Roo_Finder {
    
    public static TypedQuery<KitchenOrder> KitchenOrder.findKitchenOrdersByKitchenOrderKeyEquals(String kitchenOrderKey) {
        if (kitchenOrderKey == null || kitchenOrderKey.length() == 0) throw new IllegalArgumentException("The kitchenOrderKey argument is required");
        EntityManager em = KitchenOrder.entityManager();
        TypedQuery<KitchenOrder> q = em.createQuery("SELECT o FROM KitchenOrder AS o WHERE o.kitchenOrderKey = :kitchenOrderKey", KitchenOrder.class);
        q.setParameter("kitchenOrderKey", kitchenOrderKey);
        return q;
    }
    
    public static TypedQuery<KitchenOrder> KitchenOrder.findKitchenOrdersBySale(Sale sale) {
        if (sale == null) throw new IllegalArgumentException("The sale argument is required");
        EntityManager em = KitchenOrder.entityManager();
        TypedQuery<KitchenOrder> q = em.createQuery("SELECT o FROM KitchenOrder AS o WHERE o.sale = :sale", KitchenOrder.class);
        q.setParameter("sale", sale);
        return q;
    }
    
    public static TypedQuery<KitchenOrder> KitchenOrder.findKitchenOrdersBySaleAndKitchenOrderItemState(Sale sale, BarRestauState kitchenOrderItemState) {
        if (sale == null) throw new IllegalArgumentException("The sale argument is required");
        if (kitchenOrderItemState == null) throw new IllegalArgumentException("The kitchenOrderItemState argument is required");
        EntityManager em = KitchenOrder.entityManager();
        TypedQuery<KitchenOrder> q = em.createQuery("SELECT o FROM KitchenOrder AS o WHERE o.sale = :sale AND o.kitchenOrderItemState = :kitchenOrderItemState", KitchenOrder.class);
        q.setParameter("sale", sale);
        q.setParameter("kitchenOrderItemState", kitchenOrderItemState);
        return q;
    }
    
}
