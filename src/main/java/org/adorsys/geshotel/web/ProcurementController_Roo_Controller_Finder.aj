// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.adorsys.geshotel.web;

import java.lang.Boolean;
import java.lang.String;
import org.adorsys.geshotel.domain.UserAccount;
import org.adorsys.geshotel.resto.domain.BarRestauState;
import org.adorsys.geshotel.resto.domain.Procurement;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect ProcurementController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByIsLatestProcurementNot", "form" }, method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByIsLatestProcurementNotForm(Model uiModel) {
        return "procurements/findProcurementsByIsLatestProcurementNot";
    }
    
    @RequestMapping(params = "find=ByIsLatestProcurementNot", method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByIsLatestProcurementNot(@RequestParam(value = "isLatestProcurement", required = false) Boolean isLatestProcurement, Model uiModel) {
        uiModel.addAttribute("procurements", Procurement.findProcurementsByIsLatestProcurementNot(isLatestProcurement == null ? new Boolean(false) : isLatestProcurement).getResultList());
        return "procurements/list";
    }
    
    @RequestMapping(params = { "find=ByProcurementKeyEquals", "form" }, method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByProcurementKeyEqualsForm(Model uiModel) {
        return "procurements/findProcurementsByProcurementKeyEquals";
    }
    
    @RequestMapping(params = "find=ByProcurementKeyEquals", method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByProcurementKeyEquals(@RequestParam("procurementKey") String procurementKey, Model uiModel) {
        uiModel.addAttribute("procurements", Procurement.findProcurementsByProcurementKeyEquals(procurementKey).getResultList());
        return "procurements/list";
    }
    
    @RequestMapping(params = { "find=ByProcurementState", "form" }, method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByProcurementStateForm(Model uiModel) {
        uiModel.addAttribute("barrestaustates", java.util.Arrays.asList(BarRestauState.class.getEnumConstants()));
        return "procurements/findProcurementsByProcurementState";
    }
    
    @RequestMapping(params = "find=ByProcurementState", method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByProcurementState(@RequestParam("procurementState") BarRestauState procurementState, Model uiModel) {
        uiModel.addAttribute("procurements", Procurement.findProcurementsByProcurementState(procurementState).getResultList());
        return "procurements/list";
    }
    
    @RequestMapping(params = { "find=ByUserAccountAndProcurementState", "form" }, method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByUserAccountAndProcurementStateForm(Model uiModel) {
        uiModel.addAttribute("useraccounts", UserAccount.findAllUserAccounts());
        uiModel.addAttribute("barrestaustates", java.util.Arrays.asList(BarRestauState.class.getEnumConstants()));
        return "procurements/findProcurementsByUserAccountAndProcurementState";
    }
    
    @RequestMapping(params = "find=ByUserAccountAndProcurementState", method = RequestMethod.GET)
    public String ProcurementController.findProcurementsByUserAccountAndProcurementState(@RequestParam("userAccount") UserAccount userAccount, @RequestParam("procurementState") BarRestauState procurementState, Model uiModel) {
        uiModel.addAttribute("procurements", Procurement.findProcurementsByUserAccountAndProcurementState(userAccount, procurementState).getResultList());
        return "procurements/list";
    }
    
}
